{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"para",
				"paramsEnd"
			],
			[
				"for",
				"forceThis"
			],
			[
				"TS",
				"TSCore"
			],
			[
				"TSCon",
				"TSConstructor"
			],
			[
				"acc",
				"accessLevel"
			],
			[
				"Taxon",
				"TaxonConstructor"
			],
			[
				"exp",
				"expected"
			],
			[
				"Ta",
				"TaxonAltName"
			],
			[
				"re",
				"realConstr"
			],
			[
				"ret",
				"retExpr"
			],
			[
				"inst",
				"instName"
			],
			[
				"item",
				"items"
			],
			[
				"remove",
				"removeItem"
			],
			[
				"owner",
				"ownerItems"
			],
			[
				"fo",
				"forceThis"
			],
			[
				"ctr",
				"creator"
			],
			[
				"is",
				"isNeedRebuild"
			],
			[
				"static",
				"staticCon"
			],
			[
				"get",
				"getParamsList"
			],
			[
				"export",
				"exportLine"
			],
			[
				"expot",
				"exportString"
			],
			[
				"par",
				"parse"
			],
			[
				"ch",
				"chunks"
			],
			[
				"add",
				"addItem"
			],
			[
				"type",
				"typeExpr"
			],
			[
				"ty",
				"typeExpr"
			],
			[
				"fi",
				"fill\tproperty"
			],
			[
				"e",
				"ellipse"
			],
			[
				"cre",
				"createPath"
			],
			[
				"y",
				"year"
			],
			[
				"min",
				"min-height\tproperty"
			],
			[
				"t",
				"tooltip"
			],
			[
				"di",
				"display"
			],
			[
				"vp",
				"vpV"
			],
			[
				"create",
				"createNode"
			],
			[
				"s",
				"stroke\tproperty"
			],
			[
				"ski",
				"skill2"
			],
			[
				"skill",
				"skill2"
			],
			[
				"co",
				"column"
			],
			[
				"draw",
				"drawTable"
			],
			[
				"sort",
				"sortTable"
			],
			[
				"va",
				"valueB"
			],
			[
				"valu",
				"valueA"
			],
			[
				"font",
				"font-family\tproperty"
			],
			[
				"elem",
				"elemTable"
			],
			[
				"text",
				"textOrAttrs"
			],
			[
				"кор",
				"корпуса"
			],
			[
				"зд",
				"здоровье"
			],
			[
				"корпу",
				"корпус"
			],
			[
				"полу",
				"получаемого"
			],
			[
				"str",
				"starfleetAcademy"
			],
			[
				"веро",
				"вероятностью"
			],
			[
				"кр",
				"критических"
			],
			[
				"у",
				"увеличивает"
			],
			[
				"мо",
				"мостике"
			],
			[
				"gr",
				"green"
			],
			[
				"крити",
				"критического"
			],
			[
				"раз",
				"разбойником"
			],
			[
				"корп",
				"корпуса"
			],
			[
				"bl",
				"bloodAndHonor"
			],
			[
				"st",
				"starfleetAcademy"
			],
			[
				"sli",
				"skill1"
			],
			[
				"skil",
				"skill1"
			],
			[
				"fun",
				"function"
			],
			[
				"Wpp",
				"WppTaxon"
			],
			[
				"it",
				"itemType"
			],
			[
				"left",
				"leftType"
			],
			[
				"b",
				"bMethod"
			],
			[
				"field",
				"fieldDecl"
			],
			[
				"const",
				"constructorOver"
			],
			[
				"isR",
				"isRightStatic"
			],
			[
				"d",
				"declTaxon"
			],
			[
				"check",
				"checkErrors"
			],
			[
				"decl",
				"declTaxon"
			],
			[
				"fie",
				"fieldTaxon"
			],
			[
				"ov",
				"Overloads"
			],
			[
				"getDe",
				"getDebugStr"
			],
			[
				"getD",
				"getDebugStr"
			],
			[
				"ref",
				"refDecl"
			],
			[
				"isRe",
				"isReady"
			],
			[
				"TaxoCo",
				"TaxonCommonFunc"
			],
			[
				"Tax",
				"TaxonExpression"
			],
			[
				"isRea",
				"isReady"
			],
			[
				"le",
				"leftTaxon"
			],
			[
				"onU",
				"onUpdateField"
			],
			[
				"on",
				"onUpdateField"
			],
			[
				"taxon",
				"taxonNew"
			],
			[
				"Wait",
				"WaitForLeft"
			],
			[
				"isReady",
				"isReadyFull"
			],
			[
				"replace",
				"replaceByNew"
			],
			[
				"mat",
				"matchTaxons"
			],
			[
				"pro",
				"propsList"
			],
			[
				"constM",
				"constMatchesFloat"
			],
			[
				"con",
				"constMatchesInt"
			],
			[
				"m",
				"matchVar"
			],
			[
				"ma",
				"matchConst"
			],
			[
				"ri",
				"rightType"
			],
			[
				"typ",
				"typeRef"
			],
			[
				"match",
				"matchQuasi"
			],
			[
				"pa",
				"params"
			],
			[
				"loc",
				"locType2"
			],
			[
				"param",
				"paramType"
			],
			[
				"ex",
				"excludes"
			],
			[
				"int",
				"intAx"
			],
			[
				"ass",
				"assertTrue"
			],
			[
				"class",
				"classC"
			],
			[
				"ta",
				"targetClass"
			],
			[
				"cl",
				"classC"
			],
			[
				"targ",
				"targetClass"
			],
			[
				"cr",
				"createMemModule"
			],
			[
				"new",
				"newQueue"
			],
			[
				"assert",
				"assertTrue"
			],
			[
				"find",
				"findUp"
			],
			[
				"de",
				"decl"
			],
			[
				"isRed",
				"isReady"
			],
			[
				"value",
				"valueTaxon"
			],
			[
				"Out",
				"OutContextMemoryStream"
			],
			[
				"val",
				"valueTaxon"
			],
			[
				"refs",
				"refsList"
			],
			[
				"o",
				"onUpdate"
			],
			[
				"T",
				"Taxon"
			],
			[
				"ne",
				"newQueue"
			],
			[
				"se",
				"_setQueue"
			],
			[
				"upda",
				"updateItems"
			],
			[
				"im",
				"implements"
			],
			[
				"My",
				"MyModule"
			],
			[
				"i",
				"implements"
			],
			[
				"mo",
				"moduleInfo"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src3/Python/tests/testPyConstructor.py",
			"settings":
			{
				"buffer_size": 3274,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/example.py",
			"settings":
			{
				"buffer_size": 1376,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TS/TSFunc.py",
			"settings":
			{
				"buffer_size": 2293,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TS/body/TSBody.py",
			"settings":
			{
				"buffer_size": 424,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TS/core/TSTaxonMap.py",
			"settings":
			{
				"buffer_size": 1011,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TS/tests/testTSConstructor.py",
			"settings":
			{
				"buffer_size": 1039,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TS/TSExpression.py",
			"settings":
			{
				"buffer_size": 2768,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TS/style.py",
			"settings":
			{
				"buffer_size": 566,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/out/formatter.py",
			"settings":
			{
				"buffer_size": 3055,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/tests/testWppClass.py",
			"settings":
			{
				"buffer_size": 1606,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/tests/testWppMethod.py",
			"settings":
			{
				"buffer_size": 1075,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Python/core/PyTaxonMap.py",
			"settings":
			{
				"buffer_size": 1099,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Python/PyOverload.py",
			"settings":
			{
				"buffer_size": 258,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Python/PyFunc.py",
			"settings":
			{
				"buffer_size": 3640,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/utils/forceThis.py",
			"settings":
			{
				"buffer_size": 1125,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/WppExpression.py",
			"settings":
			{
				"buffer_size": 8643,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Taxon.py",
			"settings":
			{
				"buffer_size": 5977,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/TaxonDict.py",
			"settings":
			{
				"buffer_size": 513,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/core/TaxonOverload.py",
			"settings":
			{
				"buffer_size": 2706,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/core/TaxonAltName.py",
			"settings":
			{
				"buffer_size": 490,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/WppClass.py",
			"settings":
			{
				"buffer_size": 1359,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/WppFuncHelper.py",
			"settings":
			{
				"buffer_size": 1136,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Python/PyExpression.py",
			"settings":
			{
				"buffer_size": 3229,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Python/PyVar.py",
			"settings":
			{
				"buffer_size": 2111,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/WppVar.py",
			"settings":
			{
				"buffer_size": 5434,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/core/TaxonVar.py",
			"settings":
			{
				"buffer_size": 1826,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src3/Wpp/tests/testWppConstructor.py",
			"settings":
			{
				"buffer_size": 2823,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Сад/plan/plan.html",
		"/C/WidePreprocessor/src1/core/TaxonCall.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppArray.py",
		"/C/WidePreprocessor/src1/core/Operators.py",
		"/C/WidePreprocessor/src1/example.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppTypedef.py",
		"/C/WidePreprocessor/src1/Wpp/WppBlock.py",
		"/C/WidePreprocessor/src1/core/TaxonBlock.py",
		"/C/WidePreprocessor/src1/Wpp/WppModule.py",
		"/C/WidePreprocessor/src1/core/TaxonArray.py",
		"/C/WidePreprocessor/src1/Wpp/WppPackage.py",
		"/C/WidePreprocessor/src1/core/TaxonLocalType.py",
		"/C/WidePreprocessor/src1/core/QuasiType.py",
		"/C/WidePreprocessor/src1/core/TaxonScalar.py",
		"/C/WidePreprocessor/src1/Wpp/WppVar.py",
		"/C/WidePreprocessor/src1/core/TaxonExpression.py",
		"/C/WidePreprocessor/src1/Taxon.py",
		"/C/WidePreprocessor/src1/Wpp/WppClass.py",
		"/C/WidePreprocessor/src1/Wpp/WppTypedef.py",
		"/C/WidePreprocessor/src1/core/TaxonTypedef.py",
		"/C/WidePreprocessor/src1/Wpp/expr/Node.py",
		"/C/WidePreprocessor/src1/Wpp/expr/scanLexems.py",
		"/C/WidePreprocessor/src1/Wpp/expr/Taxons.py",
		"/C/WidePreprocessor/src1/Wpp/WppLocalType.py",
		"/C/Users/PeterWin/Documents/StarTrek/officers.html",
		"/C/WidePreprocessor/src1/Wpp/WppCore.py",
		"/C/JS/dnd-test.html",
		"/C/WidePreprocessor/src1/Wpp/WppTaxon.py",
		"/C/WidePreprocessor/src1/Wpp/expr/tests/testScanLexems.py",
		"/C/WidePreprocessor/src1/Wpp/expr/tests/testWppConst.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppVar.py",
		"/C/WidePreprocessor/src1/core/TaxonVar.py",
		"/C/WidePreprocessor/src1/Wpp/WppFunc.py",
		"/C/WidePreprocessor/src1/core/debugUtils.py",
		"/C/WidePreprocessor/src1/core/Ref.py",
		"/C/WidePreprocessor/src1/core/TaxonFunc.py",
		"/C/WidePreprocessor/src1/core/Signature.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppClass.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppModule.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppFunc.py",
		"/C/WidePreprocessor/src1/Wpp/WppReturn.py",
		"/C/WidePreprocessor/src1/core/tests/testSignature.py",
		"/C/WidePreprocessor/src1/Wpp/expr/tests/testWppBinOp.py",
		"/C/WidePreprocessor/src1/Wpp/WppExpression.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppType.py",
		"/C/WidePreprocessor/src1/Wpp/core/WppTaxonMap.py",
		"/C/WidePreprocessor/src1/Wpp/expr/tests/testWppCall.py",
		"/C/WidePreprocessor/src1/core/tests/testTaxonWithParent.py",
		"/C/WidePreprocessor/src1/core/TaxonWithParent.py",
		"/C/WidePreprocessor/src1/core/TaxonClass.py",
		"/C/WidePreprocessor/src1/core/TaxonModule.py",
		"/C/WidePreprocessor/src1/core/tests/testTaxonModule.py",
		"/C/WidePreprocessor/src1/TaxonDictionary.py",
		"/C/WidePreprocessor/src1/testTaxon.py",
		"/C/WidePreprocessor/src1/Wpp/WppType.py",
		"/C/WidePreprocessor/src1/core/matchQuasi.py",
		"/C/WidePreprocessor/src1/core/TaxonType.py",
		"/C/WidePreprocessor/src1/Wpp/expr/parseExpr.py",
		"/C/WidePreprocessor/src1/test.py",
		"/C/WidePreprocessor/src1/Wpp/expr/tests/testWppIdExpr.py",
		"/C/WidePreprocessor/src1/core/TaxonReturn.py",
		"/C/WidePreprocessor/src1/core/TaxonInterface.py",
		"/C/WidePreprocessor/src1/core/tasks/TaskNextStep.py",
		"/C/WidePreprocessor/src1/Wpp/WppInterface.py",
		"/C/WidePreprocessor/src1/Wpp/expr/findOperator.py",
		"/C/WidePreprocessor/src1/core/tests/testTaxonClass.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppInterface.py",
		"/C/WidePreprocessor/src1/core/TaxonImport.py",
		"/C/WidePreprocessor/src1/out/OutContextFile.py",
		"/C/WidePreprocessor/src1/out/OutContextMemory.py",
		"/C/WidePreprocessor/src1/Wpp/WppDictionary.py",
		"/C/WidePreprocessor/src1/Wpp/tests/testWppPackage.py",
		"/C/WidePreprocessor/src1/core/TaxonPackage.py",
		"/C/WidePreprocessor/src1/testTaxonDictionary.py",
		"/C/WidePreprocessor/src1/core/tests/testTaxonPackage.py",
		"/C/WidePreprocessor/src/Taxon.py",
		"/C/WidePreprocessor/src1/core/ErrorTaxon.py",
		"/C/WidePreprocessor/src/Wpp/core/WppTaxonMap.py",
		"/C/WidePreprocessor/src/Wpp/Context.py",
		"/C/WidePreprocessor/src/Wpp/tests/testCast.py",
		"/C/WidePreprocessor/src/Python/tests/testPyCast.py",
		"/C/WidePreprocessor/src/Python/PyCast.py",
		"/C/WidePreprocessor/src/Wpp/WppCast.py",
		"/C/WidePreprocessor/src/core/TaxonCast.py",
		"/C/WidePreprocessor/src/core/Operators.py",
		"/C/WidePreprocessor/src/core/TaxonFunc.py",
		"/C/WidePreprocessor/src/Wpp/WppType.py",
		"/C/WidePreprocessor/src/Wpp/WppFunc.py",
		"/C/WidePreprocessor/src/TS/TsClass.py",
		"/C/WidePreprocessor/src/TS/TsModule.py",
		"/C/WidePreprocessor/src/TS/tests/testTsMath.py",
		"/C/WidePreprocessor/src/TS/core/TsArray.py",
		"/C/WidePreprocessor/src/TS/TsCore.py",
		"/C/WidePreprocessor/src/TS/TsTypedef.py",
		"/C/WidePreprocessor/src/Python/PyFunc.py",
		"/C/WidePreprocessor/src/TS/TsTaxon.py",
		"/C/WidePreprocessor/src/TS/TsType.py",
		"/C/WidePreprocessor/src/TS/tests/testTsClass.py",
		"/C/WidePreprocessor/src/TS/tests/testTsExpression.py",
		"/C/WidePreprocessor/src/TS/TsExpression.py",
		"/C/WidePreprocessor/src/TS/tests/testTsOperator.py",
		"/C/WidePreprocessor/src/TS/TsOperator.py",
		"/C/WidePreprocessor/src/TS/tests/testTsFunc.py",
		"/C/WidePreprocessor/src/TS/TsVar.py",
		"/C/WidePreprocessor/src/TS/TsFunc.py",
		"/C/WidePreprocessor/src/TS/core/TsMath.py",
		"/C/WidePreprocessor/src/TS/core/TsString.py",
		"/C/WidePreprocessor/src/TS/TsBlock.py",
		"/C/WidePreprocessor/src/Wpp/expr/Node.py",
		"/C/WidePreprocessor/src/Wpp/WppTaxon.py",
		"/C/WidePreprocessor/src/Wpp/WppTypedef.py",
		"/C/WidePreprocessor/src/TS/tests/testTsConstructor.py",
		"/C/WidePreprocessor/src/TS/tests/testTsTypedef.py",
		"/C/WidePreprocessor/src/TS/tests/testTsCast.py",
		"/C/WidePreprocessor/src/TS/core/TsTaxonMap.py",
		"/C/WidePreprocessor/src/core/TaxonType.py",
		"/C/WidePreprocessor/src/core/TaxonForeach.py",
		"/C/WidePreprocessor/src/core/TaxonModule.py",
		"/C/WidePreprocessor/src/Python/core/PyTaxonMap.py",
		"/C/WidePreprocessor/src/Wpp/core/WppArray.py",
		"/C/WidePreprocessor/src/Wpp/core/WppString.py",
		"/C/WidePreprocessor/src/Wpp/WppCore.py",
		"/C/WidePreprocessor/src/core/TaxonClass.py",
		"/C/WidePreprocessor/src/Python/PyClass.py",
		"/C/WidePreprocessor/src/Python/core/PyMath.py",
		"/C/WidePreprocessor/src/Python/PyCore.py",
		"/C/WidePreprocessor/src/core/tests/testTaxonId.py",
		"/C/WidePreprocessor/src/core/TaxonBlock.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"replace",
			"руд",
			"Кати",
			"starAcademy",
			".attrs",
			"==>",
			"onUpdateField",
			"self",
			"print",
			"trace",
			"print",
			"getDeclaration",
			"BinOp",
			"buildQuasi",
			"getQuasi",
			"BinOp",
			"print",
			"print(",
			"IdExpr",
			"IdEcpr",
			"TaxonBinOp",
			"isReady",
			"WppType",
			"creator",
			"makeTaxon",
			"WppConst",
			"TaskSetType",
			"BinOpNames",
			"TaxonBlock",
			"refList",
			"class",
			"log10",
			"findUp(",
			"altName",
			"TsNew",
			"Access",
			"default",
			"repla",
			"self.refs[",
			"update",
			"'field",
			"TaxonArr",
			"pass",
			"'[",
			"specWords",
			"makeDecorator",
			">>>",
			"print(",
			"'call",
			"right",
			"const",
			"TaxonExpression",
			"VarCPP",
			"ExpressionCPP",
			"TaxonExpression",
			"typeRef"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"starfleetAcademy",
			"assert"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src3/Python/tests/testPyConstructor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3274,
						"regions":
						{
						},
						"selection":
						[
							[
								620,
								1182
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 256.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src3/example.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1376,
						"regions":
						{
						},
						"selection":
						[
							[
								685,
								685
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 256.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src3/TS/TSFunc.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2293,
						"regions":
						{
						},
						"selection":
						[
							[
								2247,
								2247
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 541.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src3/TS/body/TSBody.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 424,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src3/TS/core/TSTaxonMap.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1011,
						"regions":
						{
						},
						"selection":
						[
							[
								827,
								827
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src3/TS/tests/testTSConstructor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1039,
						"regions":
						{
						},
						"selection":
						[
							[
								871,
								871
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 151.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src3/TS/TSExpression.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2768,
						"regions":
						{
						},
						"selection":
						[
							[
								2464,
								2464
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 661.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src3/TS/style.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 566,
						"regions":
						{
						},
						"selection":
						[
							[
								289,
								289
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src3/out/formatter.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3055,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 864.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src3/Wpp/tests/testWppClass.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1606,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 141.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src3/Wpp/tests/testWppMethod.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1075,
						"regions":
						{
						},
						"selection":
						[
							[
								1075,
								1075
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src3/Python/core/PyTaxonMap.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1099,
						"regions":
						{
						},
						"selection":
						[
							[
								932,
								932
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src3/Python/PyOverload.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 258,
						"regions":
						{
						},
						"selection":
						[
							[
								257,
								257
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src3/Python/PyFunc.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3640,
						"regions":
						{
						},
						"selection":
						[
							[
								1041,
								1041
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src3/utils/forceThis.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1125,
						"regions":
						{
						},
						"selection":
						[
							[
								995,
								995
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src3/Wpp/WppExpression.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8643,
						"regions":
						{
						},
						"selection":
						[
							[
								3384,
								3427
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1305.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src3/Taxon.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5977,
						"regions":
						{
						},
						"selection":
						[
							[
								5894,
								5894
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3091.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src3/TaxonDict.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 513,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "src3/core/TaxonOverload.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2706,
						"regions":
						{
						},
						"selection":
						[
							[
								459,
								459
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "src3/core/TaxonAltName.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 490,
						"regions":
						{
						},
						"selection":
						[
							[
								376,
								376
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "src3/Wpp/WppClass.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1359,
						"regions":
						{
						},
						"selection":
						[
							[
								367,
								367
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "src3/Wpp/WppFuncHelper.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1136,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "src3/Python/PyExpression.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3229,
						"regions":
						{
						},
						"selection":
						[
							[
								2690,
								3027
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 856.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "src3/Python/PyVar.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2111,
						"regions":
						{
						},
						"selection":
						[
							[
								1908,
								1908
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 301.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "src3/Wpp/WppVar.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5434,
						"regions":
						{
						},
						"selection":
						[
							[
								4869,
								4869
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1786.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "src3/core/TaxonVar.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1826,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "src3/Wpp/tests/testWppConstructor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2823,
						"regions":
						{
						},
						"selection":
						[
							[
								2005,
								2005
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 691.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 193.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"PyEx",
				"C:\\WidePreprocessor\\src3\\Python\\PyExpression.py"
			],
			[
				"TS",
				"C:\\WidePreprocessor\\src3\\TS\\TSExpression.py"
			],
			[
				"ex",
				"C:\\WidePreprocessor\\src3\\example.py"
			],
			[
				"TSF",
				"C:\\WidePreprocessor\\src3\\TS\\TSFunc.py"
			],
			[
				"testPy",
				"C:\\WidePreprocessor\\src3\\Python\\tests\\testPyConstructor.py"
			],
			[
				"PyTax",
				"C:\\WidePreprocessor\\src3\\Python\\core\\PyTaxonMap.py"
			],
			[
				"WppC",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppCore.py"
			],
			[
				"WppCo",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppCore.py"
			],
			[
				"test",
				"C:\\WidePreprocessor\\src1\\Wpp\\tests\\testWppArray.py"
			],
			[
				"TaxVar",
				"C:\\WidePreprocessor\\src1\\core\\TaxonVar.py"
			],
			[
				"Sig",
				"C:\\WidePreprocessor\\src1\\core\\Signature.py"
			],
			[
				"TaxFun",
				"C:\\WidePreprocessor\\src1\\core\\TaxonFunc.py"
			],
			[
				"TaEx",
				"C:\\WidePreprocessor\\src1\\core\\TaxonExpression.py"
			],
			[
				"TaxLo",
				"C:\\WidePreprocessor\\src1\\core\\TaxonLocalType.py"
			],
			[
				"Quasi",
				"C:\\WidePreprocessor\\src1\\core\\QuasiType.py"
			],
			[
				"Signa",
				"C:\\WidePreprocessor\\src1\\core\\Signature.py"
			],
			[
				"TaxCla",
				"C:\\WidePreprocessor\\src1\\core\\TaxonClass.py"
			],
			[
				"Tax",
				"C:\\WidePreprocessor\\src1\\Wpp\\expr\\Taxons.py"
			],
			[
				"",
				"C:\\WidePreprocessor\\src1\\core\\TaxonCall.py"
			],
			[
				"TaxCall",
				"C:\\WidePreprocessor\\src1\\core\\TaxonCall.py"
			],
			[
				"TaxEx",
				"C:\\WidePreprocessor\\src1\\core\\TaxonExpression.py"
			],
			[
				"WppVar",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppVar.py"
			],
			[
				"exa",
				"C:\\WidePreprocessor\\src1\\example.py"
			],
			[
				"TaxCa",
				"C:\\WidePreprocessor\\src1\\core\\TaxonCall.py"
			],
			[
				"Taxons",
				"C:\\WidePreprocessor\\src1\\Wpp\\expr\\Taxons.py"
			],
			[
				"Ta.py",
				"C:\\WidePreprocessor\\src1\\Taxon.py"
			],
			[
				"Qua",
				"C:\\WidePreprocessor\\src1\\core\\QuasiType.py"
			],
			[
				"exam",
				"C:\\WidePreprocessor\\src1\\example.py"
			],
			[
				"Taxon.p",
				"C:\\WidePreprocessor\\src1\\Taxon.py"
			],
			[
				"TaxCl",
				"C:\\WidePreprocessor\\src1\\core\\TaxonClass.py"
			],
			[
				"TaxC",
				"C:\\WidePreprocessor\\src1\\core\\TaxonCall.py"
			],
			[
				"WppVa",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppVar.py"
			],
			[
				"TaxonFun",
				"C:\\WidePreprocessor\\src1\\core\\TaxonFunc.py"
			],
			[
				"TaxonF",
				"C:\\WidePreprocessor\\src1\\core\\TaxonFunc.py"
			],
			[
				"TaxonVar",
				"C:\\WidePreprocessor\\src1\\core\\TaxonVar.py"
			],
			[
				"LocalTy",
				"C:\\WidePreprocessor\\src1\\core\\TaxonLocalType.py"
			],
			[
				"TaxonC",
				"C:\\WidePreprocessor\\src1\\core\\TaxonClass.py"
			],
			[
				"WppV",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppVar.py"
			],
			[
				"T",
				"C:\\WidePreprocessor\\src1\\core\\TaxonExpression.py"
			],
			[
				"WppEx",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppExpression.py"
			],
			[
				"testWVa",
				"C:\\WidePreprocessor\\src1\\Wpp\\tests\\testWppVar.py"
			],
			[
				"testWpp",
				"C:\\WidePreprocessor\\src1\\Wpp\\tests\\testWppType.py"
			],
			[
				"Quas",
				"C:\\WidePreprocessor\\src1\\core\\QuasiType.py"
			],
			[
				"WppF",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppFunc.py"
			],
			[
				"WppT",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppType.py"
			],
			[
				"testS",
				"C:\\WidePreprocessor\\src1\\core\\tests\\testSignature.py"
			],
			[
				"TaxFu",
				"C:\\WidePreprocessor\\src1\\core\\TaxonFunc.py"
			],
			[
				"Si",
				"C:\\WidePreprocessor\\src1\\core\\Signature.py"
			],
			[
				"TaLo",
				"C:\\WidePreprocessor\\src1\\core\\TaxonLocalType.py"
			],
			[
				"Scalar",
				"C:\\WidePreprocessor\\src1\\core\\TaxonScalar.py"
			],
			[
				"testWppC",
				"C:\\WidePreprocessor\\src1\\Wpp\\expr\\tests\\testWppConst.py"
			],
			[
				"WppCore",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppCore.py"
			],
			[
				"TaxVa",
				"C:\\WidePreprocessor\\src1\\core\\TaxonVar.py"
			],
			[
				"TaxSc",
				"C:\\WidePreprocessor\\src1\\core\\TaxonScalar.py"
			],
			[
				"TaxF",
				"C:\\WidePreprocessor\\src1\\core\\TaxonFunc.py"
			],
			[
				"Scal",
				"C:\\WidePreprocessor\\src1\\core\\TaxonScalar.py"
			],
			[
				"TaxTy",
				"C:\\WidePreprocessor\\src1\\core\\TaxonType.py"
			],
			[
				"Ta",
				"C:\\WidePreprocessor\\src1\\core\\TaxonExpression.py"
			],
			[
				"testW",
				"C:\\WidePreprocessor\\src1\\Wpp\\tests\\testWppClass.py"
			],
			[
				"TaxW",
				"C:\\WidePreprocessor\\src1\\core\\TaxonWithParent.py"
			],
			[
				"TaxIn",
				"C:\\WidePreprocessor\\src1\\core\\TaxonInterface.py"
			],
			[
				"testWp",
				"C:\\WidePreprocessor\\src1\\Wpp\\tests\\testWppClass.py"
			],
			[
				"WppCl",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppClass.py"
			],
			[
				"TaxonCla",
				"C:\\WidePreprocessor\\src1\\core\\TaxonClass.py"
			],
			[
				"WppCla",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppClass.py"
			],
			[
				"WppRet",
				"C:\\WidePreprocessor\\src1\\core\\TaxonReturn.py"
			],
			[
				"Wpp",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppVar.py"
			],
			[
				"TaxonVa",
				"C:\\WidePreprocessor\\src1\\core\\TaxonVar.py"
			],
			[
				"TaxV",
				"C:\\WidePreprocessor\\src1\\core\\TaxonVar.py"
			],
			[
				"Ref",
				"C:\\WidePreprocessor\\src1\\core\\Ref.py"
			],
			[
				"WppClass",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppClass.py"
			],
			[
				"WppTyp",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppType.py"
			],
			[
				"WppM",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppModule.py"
			],
			[
				"TaxonTy",
				"C:\\WidePreprocessor\\src1\\core\\TaxonType.py"
			],
			[
				"WppMo",
				"C:\\WidePreprocessor\\src1\\core\\TaxonModule.py"
			],
			[
				"WppTy",
				"C:\\WidePreprocessor\\src1\\Wpp\\WppType.py"
			],
			[
				"testT",
				"C:\\WidePreprocessor\\src1\\Wpp\\tests\\testWppType.py"
			],
			[
				"testSi",
				"C:\\WidePreprocessor\\src\\core\\tests\\testSignature.py"
			],
			[
				"TsTa",
				"C:\\WidePreprocessor\\src\\TS\\core\\TsTaxonMap.py"
			],
			[
				"TaxonFu",
				"C:\\WidePreprocessor\\src\\core\\TaxonFunc.py"
			],
			[
				"PyE",
				"C:\\WidePreprocessor\\src\\Python\\PyExpression.py"
			],
			[
				"TsV",
				"C:\\WidePreprocessor\\src\\TS\\TsVar.py"
			],
			[
				"TsCla",
				"C:\\WidePreprocessor\\src\\TS\\TsClass.py"
			],
			[
				"TsCo",
				"C:\\WidePreprocessor\\src\\TS\\TsCore.py"
			],
			[
				"PyMath",
				"C:\\WidePreprocessor\\src\\Python\\core\\PyMath.py"
			],
			[
				"Point",
				"C:\\WidePreprocessor\\CharChem\\wpp\\math\\Point.wpp"
			],
			[
				"PyCa",
				"C:\\WidePreprocessor\\src\\Python\\PyCast.py"
			],
			[
				"PyC",
				"C:\\WidePreprocessor\\src\\Python\\PyCore.py"
			],
			[
				"tePyM",
				"C:\\WidePreprocessor\\src\\Python\\tests\\testPyMath.py"
			],
			[
				"PyMod",
				"C:\\WidePreprocessor\\src\\Python\\PyModule.py"
			],
			[
				"PyM",
				"C:\\WidePreprocessor\\src\\Python\\core\\PyMath.py"
			],
			[
				"PyMa",
				"C:\\WidePreprocessor\\src\\Python\\core\\PyMath.py"
			],
			[
				"Py",
				"C:\\WidePreprocessor\\src\\Python\\PyFunc.py"
			],
			[
				"testPyOp",
				"C:\\WidePreprocessor\\src\\Python\\tests\\testPyOperator.py"
			],
			[
				"PyOp",
				"C:\\WidePreprocessor\\src\\Python\\PyOperator.py"
			],
			[
				"TaFu",
				"C:\\WidePreprocessor\\src\\core\\TaxonFunc.py"
			],
			[
				"PyA",
				"C:\\WidePreprocessor\\src\\Python\\core\\PyArray.py"
			],
			[
				"PyArr",
				"C:\\WidePreprocessor\\src\\Python\\core\\PyArray.py"
			],
			[
				"testPyA",
				"C:\\WidePreprocessor\\src\\Python\\tests\\testPyArray.py"
			],
			[
				"PyStr",
				"C:\\WidePreprocessor\\src\\Python\\core\\PyString.py"
			],
			[
				"WppE",
				"C:\\WidePreprocessor\\src\\Wpp\\WppExpression.py"
			],
			[
				"Taxo",
				"C:\\WidePreprocessor\\src\\Wpp\\expr\\Taxons.py"
			],
			[
				"WppBl",
				"C:\\WidePreprocessor\\src\\Wpp\\WppBlock.py"
			],
			[
				"WppDi",
				"C:\\WidePreprocessor\\src\\Wpp\\WppDictionary.py"
			],
			[
				"Out",
				"C:\\WidePreprocessor\\src\\out\\OutContextFile.py"
			],
			[
				"TaxArr",
				"C:\\WidePreprocessor\\src\\core\\expression\\TaxonArrayIndex.py"
			],
			[
				"TaBi",
				"C:\\WidePreprocessor\\src\\core\\expression\\TaxonBinOp.py"
			],
			[
				"TaxonId",
				"C:\\WidePreprocessor\\src\\core\\expression\\TaxonIdExpr.py"
			],
			[
				"Ex",
				"C:\\WidePreprocessor\\src\\lang\\CPP\\ExpressionCPP.py"
			],
			[
				"Loca",
				"C:\\WidePreprocessor\\src\\lang\\CPP\\LocalTypeCPP.py"
			],
			[
				"TaxonBin",
				"C:\\WidePreprocessor\\src\\core\\expression\\TaxonBinOp.py"
			],
			[
				"Lo",
				"C:\\WidePreprocessor\\src\\core\\LocalType.py"
			],
			[
				"ExprI",
				"C:\\WidePreprocessor\\src\\core\\expression\\TaxonIdExpr.py"
			],
			[
				"LocT",
				"C:\\WidePreprocessor\\src\\lang\\CPP\\LocalTypeCPP.py"
			],
			[
				"Lang",
				"C:\\WidePreprocessor\\src\\lang\\LangNode.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
